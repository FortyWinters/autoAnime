#!/bin/bash

stop_process() {
    PORT=$1
    PID=$(sudo lsof -t -i :$PORT)
    if [ -n "$PID" ]; then
        echo "Killing process on port $PORT (PID: $PID)"
        sudo kill -9 $PID
    else
        echo "No process found on port $PORT"
    fi
}

start_services() {
    echo "Starting services..."
    
    read -p "Do you want to start the services in tmux session? (y/n): " use_tmux
    if [[ "$use_tmux" == "y" || "$use_tmux" == "Y" ]]; then
        tmux new-session -d -s anime_services -n "ServicePanel"
        tmux send-keys -t anime_services:0.0 "cd autoAnimeR/app && cargo run" C-m
        tmux split-window -v -t anime_services:0
        tmux send-keys -t anime_services:0.1 "cd autoAnimeUI && npm run dev" C-m
        tmux select-layout -t anime_services:0 even-vertical
        tmux attach-session -t anime_services
    else
        cd autoAnimeR/app && cargo run > /dev/null 2>&1 &
        cd autoAnimeUI && npm run dev > /dev/null 2>&1 &
    fi

    echo "Services started."
}

stop_services() {
    echo "Stopping services..."

    read -p "Are you sure you want to stop the services? (y/n): " confirm_stop
    if [[ "$confirm_stop" == "y" || "$confirm_stop" == "Y" ]]; then
        stop_process 8080
        stop_process 5173
        echo "Services stopped."
    else
        echo "Service stop canceled."
    fi
}

check_config_file() {
    if [ ! -f ".autoAnimeConfig" ]; then
        echo -e "\nautoAnimeConfig file not found. Creating the file..."
        
        touch .autoAnimeConfig
        echo -e "AUTOANIMER_INIT=FALSE" >> .autoAnimeConfig
        echo -e "AUTOANIMEUI_INIT=FALSE" >> .autoAnimeConfig
        echo -e "LOCAL_IP=\"127.0.0.1\"" >> .autoAnimeConfig

        echo -e "\nConfiguration file '.autoAnimeConfig' created.\n"
    fi
}

init_autoAnimeR(){
    echo -e "\nInitializing autoAnimeR..."

    cd autoAnimeR/APP && sh db_init.sh
    cd ../../
    sed -i '' 's/^AUTOANIMER_INIT=.*$/AUTOANIMER_INIT=TRUE/' .autoAnimeConfig

    echo -e "\nautoAnimeR initialization complete."
}

init_autoAnimeUI(){
    echo -e "\nInitializing autoAnimeUI..."

    cd autoAnimeUI && npm install
    cd ..
    sed -i '' 's/^AUTOANIMEUI_INIT=.*$/AUTOANIMEUI_INIT=TRUE/' .autoAnimeConfig

    echo -e "\nautoAnimeUI initialization complete."
}

printf '
             _          _          _                
  __ _ _   _| |_ ___   / \   _ __ (_)_ __ ___   ___ 
 / _` | | | | __/ _ \ / _ \ | '\''_ \| | '\''_ ` _ \ / _ \
| (_| | |_| | || (_) / ___ \| | | | | | | | | |  __/
 \__,_|\__,_|\__\___/_/   \_\_| |_|_|_| |_| |_|\___/
'

echo -e "\nWelcome to the autoAnime service manager!\n"

check_config_file
AUTOANIMER_INIT=$(awk -F '=' '/^AUTOANIMER_INIT=/ {print $2}' .autoAnimeConfig)
AUTOANIMEUI_INIT=$(awk -F '=' '/^AUTOANIMEUI_INIT=/ {print $2}' .autoAnimeConfig)

echo "Please choose an action:"
echo "1) Start services"
echo "2) Stop services"
read -p "Enter your choice (1 or 2): " action

action=$(echo "$action" | xargs)

if [ "$action" == 1 ]; then
    if [ "$AUTOANIMER_INIT" = "FALSE" ]; then
        init_autoAnimeR
    fi

    if [ "$AUTOANIMEUI_INIT" = "FALSE" ]; then
        init_autoAnimeUI
    fi

    start_services
elif [ "$action" == 2 ]; then
    stop_services
else
    echo -e "\nInvalid choice! Please enter 1 or 2 to proceed."
    exit 1
fi